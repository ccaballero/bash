#!/usr/bin/env node

if(!process.argv[2]){
    console.log('Need one parameter, url from tmo');
    process.exit(1);
}

const cheerio=require('cheerio')
  , fs=require('fs')
  , request=require('sync-request')
  , uniq=require('underscore').uniq
  , regex=/https?\:\/\/inmanga.com\/ver\/manga\/(.*)\/(.*)\/(.*)/
  , params=regex.exec(process.argv[2])
  , headers={
        headers:{
            'user-agent':'Mozilla/5.0 (X11; Linux i686; rv:10.0) '
                +'Gecko/20100101 Firefox/10.0'
          , 'x-requested-with':'XMLHtttpRequest'
          , 'referer':process.argv[2]
          , 'accept':'application/json, text/plain, *-/*'
          , 'accept-language':'es-419,es;q=0.9'
          , 'cache-mode':'no-cache'
        }
    }

console.log('Reading from',process.argv[2]);
var url_options='https://inmanga.com/chapter/chapterIndexControls?identification='
  , response=request('GET',url_options+params[3],headers)
  , text=response.getBody().toString()
  , $=cheerio.load(text)
  , codes=[]

$('select#PageList>option').each(function(i,item){
    codes.push(item.attribs.value);
});

codes=uniq(codes);

var url_image='https://inmanga.com/page/getPageImage/?identification='
  , dir=''

if(process.argv[3]){
    if(!fs.existsSync(process.argv[3])){
        fs.mkdirSync(process.argv[3]);
    }

    dir=process.argv[3]+'/';
}

codes.forEach((i,j)=>{
    console.log('=>',url_image+i);
    var stream=request('GET',url_image+i,{
            headers:{
                'user-agent':'Mozilla/5.0 (X11; Linux i686; rv:10.0) '
                    +'Gecko/20100101 Firefox/10.0'
              , 'referer':process.argv[2]
            }
        })

    fs.writeFileSync(dir+j.toString().padStart(2,'0')+'.jpg',stream.getBody());
});

